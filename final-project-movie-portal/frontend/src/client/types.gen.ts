// This file is auto-generated by @hey-api/openapi-ts

export type UserDto = {
    id?: number;
    username?: string;
    email?: string;
    roles?: Array<string>;
};

export type UserWatchlistMovieDto = {
    movieId: number;
};

export type UserFavoriteMovieDto = {
    movieId: number;
    score: number;
};

export type DirectorDto = {
    id?: number;
    name?: string;
};

export type MovieDto = {
    id?: number;
    title?: string;
    description?: string;
    director?: DirectorDto;
    categoryIds?: Array<number>;
    releaseDate?: string;
    genre?: string;
    language?: string;
    country?: string;
    posterUrl?: string;
};

export type RegisterRequestDto = {
    username: string;
    email: string;
    password: string;
};

export type RegisterResponseDto = {
    userDTO?: UserDto;
};

export type LoginRequestDto = {
    username?: string;
    password?: string;
};

export type LoginResponseDto = {
    token?: string;
};

export type UserMovieWatchlistDto = {
    user?: UserDto;
    watchlist?: Array<MovieDto>;
};

export type MovieScorePairDto = {
    movie?: MovieDto;
    score?: number;
};

export type UserMovieFavoriteDto = {
    user?: UserDto;
    favorites?: Array<MovieScorePairDto>;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type UserUnwatchlistMovieDto = {
    movieId: number;
};

export type UserUnfavoriteMovieDto = {
    movieId: number;
};

export type DeleteUserData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type DeleteUserResponses = {
    /**
     * OK
     */
    200: UserDto;
};

export type DeleteUserResponse = DeleteUserResponses[keyof DeleteUserResponses];

export type GetUserByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type GetUserByIdResponses = {
    /**
     * OK
     */
    200: UserDto;
};

export type GetUserByIdResponse = GetUserByIdResponses[keyof GetUserByIdResponses];

export type UpdateUserData = {
    body: UserDto;
    path: {
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type UpdateUserResponses = {
    /**
     * OK
     */
    200: UserDto;
};

export type UpdateUserResponse = UpdateUserResponses[keyof UpdateUserResponses];

export type RemoveFromWatchlistData = {
    body: UserUnwatchlistMovieDto;
    path?: never;
    query?: never;
    url: '/users/movie/watchlist';
};

export type RemoveFromWatchlistResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type AddToWatchlistData = {
    body: UserWatchlistMovieDto;
    path?: never;
    query?: never;
    url: '/users/movie/watchlist';
};

export type AddToWatchlistResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type UnfavoriteMovieData = {
    body: UserUnfavoriteMovieDto;
    path?: never;
    query?: never;
    url: '/users/movie/favorite';
};

export type UnfavoriteMovieResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FavoriteMovieData = {
    body: UserFavoriteMovieDto;
    path?: never;
    query?: never;
    url: '/users/movie/favorite';
};

export type FavoriteMovieResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteMovieData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/movies/{id}';
};

export type DeleteMovieResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetMovieByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/movies/{id}';
};

export type GetMovieByIdResponses = {
    /**
     * OK
     */
    200: MovieDto;
};

export type GetMovieByIdResponse = GetMovieByIdResponses[keyof GetMovieByIdResponses];

export type UpdateMovieData = {
    body: MovieDto;
    path: {
        id: number;
    };
    query?: never;
    url: '/movies/{id}';
};

export type UpdateMovieResponses = {
    /**
     * OK
     */
    200: MovieDto;
};

export type UpdateMovieResponse = UpdateMovieResponses[keyof UpdateMovieResponses];

export type DeleteDirectorData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/directors/{id}';
};

export type DeleteDirectorResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetDirectorByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/directors/{id}';
};

export type GetDirectorByIdResponses = {
    /**
     * OK
     */
    200: DirectorDto;
};

export type GetDirectorByIdResponse = GetDirectorByIdResponses[keyof GetDirectorByIdResponses];

export type UpdateDirectorData = {
    body: DirectorDto;
    path: {
        id: number;
    };
    query?: never;
    url: '/directors/{id}';
};

export type UpdateDirectorResponses = {
    /**
     * OK
     */
    200: DirectorDto;
};

export type UpdateDirectorResponse = UpdateDirectorResponses[keyof UpdateDirectorResponses];

export type GetAllMoviesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/movies';
};

export type GetAllMoviesResponses = {
    /**
     * OK
     */
    200: Array<MovieDto>;
};

export type GetAllMoviesResponse = GetAllMoviesResponses[keyof GetAllMoviesResponses];

export type CreateMovieData = {
    body: MovieDto;
    path?: never;
    query?: never;
    url: '/movies';
};

export type CreateMovieResponses = {
    /**
     * OK
     */
    200: MovieDto;
};

export type CreateMovieResponse = CreateMovieResponses[keyof CreateMovieResponses];

export type GetAllDirectorsData = {
    body?: never;
    path?: never;
    query: {
        pageable: Pageable;
    };
    url: '/directors';
};

export type GetAllDirectorsResponses = {
    /**
     * OK
     */
    200: Array<DirectorDto>;
};

export type GetAllDirectorsResponse = GetAllDirectorsResponses[keyof GetAllDirectorsResponses];

export type CreateDirectorData = {
    body: DirectorDto;
    path?: never;
    query?: never;
    url: '/directors';
};

export type CreateDirectorResponses = {
    /**
     * OK
     */
    200: DirectorDto;
};

export type CreateDirectorResponse = CreateDirectorResponses[keyof CreateDirectorResponses];

export type RegisterData = {
    body: RegisterRequestDto;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type RegisterResponses = {
    /**
     * OK
     */
    200: RegisterResponseDto;
};

export type RegisterResponse = RegisterResponses[keyof RegisterResponses];

export type LoginData = {
    body: LoginRequestDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginResponses = {
    /**
     * OK
     */
    200: LoginResponseDto;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type GetUserWatchlistData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/users/{id}/watchlist';
};

export type GetUserWatchlistResponses = {
    /**
     * OK
     */
    200: UserMovieWatchlistDto;
};

export type GetUserWatchlistResponse = GetUserWatchlistResponses[keyof GetUserWatchlistResponses];

export type GetUserFavoritesData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/users/{id}/favorites';
};

export type GetUserFavoritesResponses = {
    /**
     * OK
     */
    200: UserMovieFavoriteDto;
};

export type GetUserFavoritesResponse = GetUserFavoritesResponses[keyof GetUserFavoritesResponses];

export type GetMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type GetMeResponses = {
    /**
     * OK
     */
    200: UserDto;
};

export type GetMeResponse = GetMeResponses[keyof GetMeResponses];

export type GetAllUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/';
};

export type GetAllUsersResponses = {
    /**
     * OK
     */
    200: Array<UserDto>;
};

export type GetAllUsersResponse = GetAllUsersResponses[keyof GetAllUsersResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8080' | (string & {});
};